sync_heater_valves:
  alias: Sync heater valves with thermostat input booleans
  variables:
    # When valves is open, switch is off
    entity_ids: |
      {% set fake_heater_valves = [
          states.input_boolean.thermostat_driven_heater_valve_master_bedroom,
          states.input_boolean.thermostat_driven_heater_valve_master_bathroom_hot_floor,
          states.input_boolean.thermostat_driven_heater_valve_cabinet,
          states.input_boolean.thermostat_driven_heater_valve_kid_small_bedroom,
          states.input_boolean.thermostat_driven_heater_valve_kid_big_bedroom,
          states.input_boolean.thermostat_driven_heater_valve_hall_and_small_bathroom,
          states.input_boolean.thermostat_driven_heater_valve_livingroom,
          states.input_boolean.thermostat_driven_heater_valve_hot_floor_livingroom1,
          states.input_boolean.thermostat_driven_heater_valve_hot_floor_livingroom2,
          states.input_boolean.thermostat_driven_heater_valve_hot_floor_livingroom3,
          states.input_boolean.thermostat_driven_heater_valve_kitchen_hot_floor,
          states.input_boolean.thermostat_driven_heater_valve_hot_floor_entrance_tech_room,
        ] %}
        {% set turn_on_entities = namespace(value=[]) %}
        {% set turn_off_entities = namespace(value=[]) %}

        {% for entity in fake_heater_valves %}
          {% set switch_entity_id = entity.entity_id 
            | replace('input_boolean.', 'switch.') 
            | replace('thermostat_driven_', '') 
          %}
          {% if entity.state == 'on' or is_state('input_boolean.heating_enabled', 'off') %}
            {% set turn_off_entities.value = turn_off_entities.value + [switch_entity_id] %}
          {% else %}
            {% set turn_on_entities.value = turn_on_entities.value + [switch_entity_id] %}
          {% endif %}
        {% endfor %}

        {{{
          'turn_on': turn_on_entities.value | reject('is_state', 'on') | list,
          'turn_off': turn_off_entities.value | reject('is_state', 'off') | list
        }}}
  sequence:
    - if: 
      - condition: template
        value_template: "{{ entity_ids['turn_off'] | count > 0 }}"
      then:
        - service: switch.turn_off
          target:
            entity_id: "{{ entity_ids['turn_off'] | list }}"
    - if: 
      - condition: template
        value_template: "{{ entity_ids['turn_on'] | count > 0 }}"
      then:
        - service: switch.turn_on
          target:
            entity_id: "{{ entity_ids['turn_on'] | list }}"

toggle_hwc:
  alias: Toggle HWC
  fields:
    state:
      name: State
      required: true
      selector:
        boolean: ~
  variables:
    new_state: "{{ 'on' if state else 'off' }}"
  sequence:
    - if: 
      - condition: state
        entity_id: input_boolean.is_main_heater_connected_to_solar
        state: 'on'
      then:
        # - if: 
        #   - condition: state
        #     entity_id: switch.water_heater_2k
        #     state: 'on'
        #   then:
        #   - service: switch.turn_off
        #     target:
        #       entity_id: switch.water_heater_2k
        - service_template: "input_boolean.turn_{{ new_state }}"
          target:
            entity_id: input_boolean.hwc_enabled
      else: 
        # - if: 
        #   - condition: state
        #     entity_id: input_boolean.hwc_enabled
        #     state: 'on'
        #   then:
        #   - service: input_boolean.turn_off
        #     target:
        #       entity_id: input_boolean.hwc_enabled
        - service_template: "switch.turn_{{ new_state }}"
          target:
            entity_id: switch.water_heater_2k