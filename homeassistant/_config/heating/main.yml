automation: !include ./automations.yml

homeassistant:
  customize:
    number.ebusd_bai_partloadhckw_power:
      max: 14
      min: 2
    number.ebusd_bai_partloadhwckw_power:
      max: 14
      min: 2
    number.ebusd_bai_hwctempmax_temp:
      min: 35
      max: 75
      step: 1
      mode: slider

input_number: 
  master_bedroom_temp_desired:
    name: Доросла спальня 
    initial: 19
    min: 5
    max: 25
    step: 1 
    icon: mdi:home-thermometer
    unit_of_measurement: °C
  master_bathroom_temp_desired:
    name: Доросла ванна 
    initial: 19
    min: 5
    max: 25
    step: 1
    icon: mdi:home-thermometer
    unit_of_measurement: °C
  cabinet_temp_desired:
    name: Кабінет 
    initial: 19
    min: 5
    max: 25
    step: 1
    icon: mdi:home-thermometer
    unit_of_measurement: °C
  kid_small_bedroom_temp_desired:
    name: Дитяча мала спальня 
    initial: 19
    min: 5
    max: 25
    step: 1
    icon: mdi:home-thermometer
    unit_of_measurement: °C
  kid_big_bedroom_temp_desired:
    name: Дитяча велика спальня 
    initial: 19
    min: 5
    max: 25
    step: 1 
    icon: mdi:home-thermometer
    unit_of_measurement: °C
  kid_bathroom_temp_desired:
    name: Дитяча ванна 
    initial: 19
    min: 5
    max: 25
    step: 1
    icon: mdi:home-thermometer
    unit_of_measurement: °C
  kitchen_temp_desired:
    name: Кухня
    initial: 19
    min: 5
    max: 25
    step: 1
    icon: mdi:home-thermometer
    unit_of_measurement: °C
  living_room_temp_desired:
    name: Вітальня
    initial: 19
    min: 5
    max: 25
    step: 1
    icon: mdi:home-thermometer
    unit_of_measurement: °C
  entrance_room_temp_desired:
    name: Вхідна кімната
    initial: 18
    min: 5
    max: 25
    step: 1
    icon: mdi:home-thermometer
    unit_of_measurement: °C

  night_shift_temp_desired:
    name: Нічне пониження темп.
    min: 0
    max: 10
    step: 1
    icon: mdi:home-thermometer
    unit_of_measurement: °C

  main_heater_storage_temp_desired:
    name: Бажана темп. ГВС
    min: 35
    max: 70
    step: 1
    icon: mdi:thermometer-water
    unit_of_measurement: °C

  heating_last_flowtemp: 
    name: Останнє значення температури носія 
    min: 0
    max: 100
    step: 1
    icon: mdi:thermometer
    unit_of_measurement: °C

input_datetime: 
  disable_hot_floor_pump_at:
    name: Час вимкнення насос гарячої підлоги
    icon: mdi:clock
    has_date: true
    has_time: true

input_select:
  heating_mode:
    name: Heating mode
    options:
      - minimum # 35 C
      - normal  # 40 C
      - fast    # 50 C
      - swift # 60 C
      - auto
    initial: normal
    icon: mdi:heat-wave

input_boolean:
  heating_enabled:
    name: Включити опалення
  hwc_enabled: 
    name: Включити ГВС

template:
  - sensor:
    - name: main_heater_current_power
      icon: mdi:flash
      device_class: power
      state_class: measurement
      state: |
        {% set max_power = 14 %}
        {% if states("binary_sensor.ebusd_bai_flame") == 'on' %}
          {{ states('sensor.ebusd_bai_modulationtempdesired') | float(0) * max_power / 100 | round(2) }}
        {% else %}
          0
        {% endif %}
      unit_of_measurement: kW

    - name: main_heater_errors
      icon: mdi:alert-octagram
      state: |
        {% set sensors = [
          states('sensor.ebusd_bai_currenterror_error'), 
          states('sensor.ebusd_bai_currenterror_error_2'), 
          states('sensor.ebusd_bai_currenterror_error_3'), 
          states('sensor.ebusd_bai_currenterror_error_4'), 
          states('sensor.ebusd_bai_currenterror_error_5') 
        ] %}
        {% set result = sensors
          | reject('eq', 'None')
          | list
          | join(',\n')
        %}
        {{ 'none' if result == '' else result }}
    - name: current_temp_shift_desired
      state_class: measurement
      state: |
        {% if is_state('binary_sensor.is_day_heating_time', 'on') %}
          0
        {% else %}
          {{ states('input_number.night_shift_temp_desired') }}
        {% endif %}
      unit_of_measurement: °C
    - name: house_max_temp_desired
      state_class: measurement
      state: | 
        {% set temp_desired = [
            states('input_number.master_bedroom_temp_desired'),
            states('input_number.master_bathroom_temp_desired'),
            states('input_number.cabinet_temp_desired'),
            states('input_number.kid_small_bedroom_temp_desired'),
            states('input_number.kid_big_bedroom_temp_desired'),
            states('input_number.kid_bathroom_temp_desired'),
            states('input_number.kitchen_temp_desired'),
            states('input_number.living_room_temp_desired'),
            states('input_number.entrance_and_tech_room_temp_desired'),
          ] | max | float(0)
        %}
        {{ temp_desired - states('sensor.current_temp_shift_desired') | float(0) }}
    - name: heating_flow_temperature
      state_class: measurement
      state: |
        {% if states('sensor.ebusd_bai_positionvalveset') == 'Heating' %}
          {{ states('sensor.ebusd_bai_flowtemp_temp') }}
        {% else %}
          {{ states('input_number.heating_last_flowtemp') }}
        {% endif %}
      unit_of_measurement: °C

  - binary_sensor: 
    - name: is_day_heating_time
      state: "{{ 5 <= now().hour <= 21 }}"
  
  - binary_sensor:
    - name: requires_heating_in_master_bedroom
      state: |
        {% set temp_desired = states('input_number.master_bedroom_temp_desired') | float - states('sensor.current_temp_shift_desired') | float %}
        {% set temp_current = states('sensor.master_bedroom_climate_temperature') | float %}
        {{ temp_current < temp_desired }}
    - name: requires_heating_in_master_bathroom
      state: |
        {% set temp_desired = states('input_number.master_bathroom_temp_desired') | float - states('sensor.current_temp_shift_desired') | float %}
        {% set temp_current = states('sensor.master_bathroom_climate_temperature') | float %}
        {{ temp_current < temp_desired }}
    - name: requires_heating_in_cabinet
      state: |
        {% set temp_desired = states('input_number.cabinet_temp_desired') | float - states('sensor.current_temp_shift_desired') | float %}
        {% set temp_current = states('sensor.cabinet_climate_temperature') | float %}
        {{ temp_current < temp_desired }}
    - name: requires_heating_in_kid_small_bedroom
      state: |
        {% set temp_desired = states('input_number.kid_small_bedroom_temp_desired') | float - states('sensor.current_temp_shift_desired') | float %}
        {% set temp_current = 30 %}
        {{ temp_current < temp_desired }}
    - name: requires_heating_in_kid_big_bedroom
      state: |
        {% set temp_desired = states('input_number.kid_big_bedroom_temp_desired') | float - states('sensor.current_temp_shift_desired') | float %}
        {% set temp_current = states('sensor.kid_big_bedroom_climate_temperature') | float %}
        {{ temp_current < temp_desired }}
    - name: requires_heating_in_kid_bathroom
      state: |
        {% set temp_desired = states('input_number.kid_bathroom_temp_desired') | float - states('sensor.current_temp_shift_desired') | float %}
        {% set temp_current = states('sensor.kid_bathroom_climate_temperature') | float %}
        {{ temp_current < temp_desired }}
    - name: requires_heating_in_living_room
      state: |
        {% set temp_desired = states('input_number.living_room_temp_desired') | float - states('sensor.current_temp_shift_desired') | float %}
        {% set temp_current = states('sensor.living_room_climate_temperature') | float %}
        {{ temp_current < temp_desired }}
    - name: requires_heating_in_kitchen
      state: |
        {% set temp_desired = states('input_number.kitchen_temp_desired') | float - states('sensor.current_temp_shift_desired') | float %}
        {% set temp_current = states('sensor.kitchen_climate_temperature') | float %}
        {{ temp_current < temp_desired }}
    - name: requires_heating_in_entrance_room
      state: |
        {% set temp_desired = states('input_number.entrance_room_temp_desired') | float - states('sensor.current_temp_shift_desired') | float %}
        {% set temp_current = states('sensor.entrance_room_climate_temperature') | float %}
        {{ temp_current < temp_desired }}
    - name: requires_heating
      state: |
        {{
          is_state('binary_sensor.requires_heating_in_master_bedroom', 'on') or 
          is_state('binary_sensor.requires_heating_in_master_bathroom', 'on') or 
          is_state('binary_sensor.requires_heating_in_cabinet', 'on') or 
          is_state('binary_sensor.requires_heating_in_kid_small_bedroom', 'on') or 
          is_state('binary_sensor.requires_heating_in_kid_big_bedroom', 'on') or 
          is_state('binary_sensor.requires_heating_in_kid_bathroom', 'on') or 
          is_state('binary_sensor.requires_heating_in_living_room', 'on') or 
          is_state('binary_sensor.requires_heating_in_kitchen', 'on') or 
          is_state('binary_sensor.requires_heating_in_entrance_or_tech_room', 'on') 
        }}
  
  - binary_sensor:
    - name: heating_valve_open_master_bedroom
      state: |
        {{ 
          is_state('input_boolean.heating_enabled', 'off') or
          is_state('binary_sensor.requires_heating_in_master_bedroom', 'on') and 
          is_state('input_boolean.heating_enabled', 'on') 
        }}
    - name: heating_valve_open_master_bathroom
      state: |
        {{ 
          is_state('input_boolean.heating_enabled', 'off') or
          is_state('binary_sensor.requires_heating_in_master_bathroom', 'on') and 
          is_state('input_boolean.heating_enabled', 'on') 
        }}
    - name: heating_valve_open_cabinet
      state: |
        {{ 
          is_state('input_boolean.heating_enabled', 'off') or
          is_state('binary_sensor.requires_heating_in_cabinet', 'on') and 
          is_state('input_boolean.heating_enabled', 'on') 
        }}
    - name: heating_valve_open_kid_small_bedroom
      state: |
        {{ 
          is_state('input_boolean.heating_enabled', 'off') or
          is_state('binary_sensor.requires_heating_in_kid_small_bedroom', 'on') and 
          is_state('input_boolean.heating_enabled', 'on') 
        }}
    - name: heating_valve_open_kid_big_bedroom
      state: |
        {{ 
          is_state('input_boolean.heating_enabled', 'off') or
          is_state('binary_sensor.requires_heating_in_kid_big_bedroom', 'on') and 
          is_state('input_boolean.heating_enabled', 'on') 
        }}
    - name: heating_valve_open_kid_bathroom
      state: |
        {{ 
          is_state('input_boolean.heating_enabled', 'off') or
          is_state('binary_sensor.requires_heating_in_kid_bathroom', 'on') and 
          is_state('input_boolean.heating_enabled', 'on') 
        }}
    - name: heating_valve_open_living_room
      state: |
        {{ 
          is_state('input_boolean.heating_enabled', 'off') or
          is_state('binary_sensor.requires_heating_in_living_room', 'on') and 
          is_state('input_boolean.heating_enabled', 'on') 
        }}
    - name: heating_valve_open_kitchen
      state: |
        {{ 
          is_state('input_boolean.heating_enabled', 'off') or
          is_state('binary_sensor.requires_heating_in_kitchen', 'on') and 
          is_state('input_boolean.heating_enabled', 'on') 
        }}
    - name: heating_valve_open_entrance_or_tech_room
      state: |
        {{ 
          is_state('input_boolean.heating_enabled', 'off') or
          is_state('binary_sensor.requires_heating_in_entrance_or_tech_room', 'on') and 
          is_state('input_boolean.heating_enabled', 'on') 
        }}
  - trigger:
    - platform: time_pattern
      minutes: "/1"
    sensor:
    - name: main_heater_current_power_live
      icon: mdi:flash
      unit_of_measurement: "kW"
      device_class: power
      state_class: measurement
      state: >-
        {{ float(states('sensor.main_heater_current_power'), 0) }}
      attributes: 
        triggered_at: "{{ now() }}"
sensor:
  - platform: integration
    source: sensor.main_heater_current_power_live
    name: main_heater_energy
    round: 1
  - platform: min_max
    name: house_avg_temp
    type: mean
    round_digits: 1
    entity_ids:
      - sensor.cabinet_climate_temperature
      - sensor.kid_bathroom_climate_temperature
      - sensor.master_bathroom_climate_temperature
      - sensor.master_bedroom_climate_temperature
      - sensor.master_wardrobe_climate_temperature
      - sensor.living_room_climate_temperature
      - sensor.entrance_room_climate_temperature