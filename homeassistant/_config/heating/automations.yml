- id: sync_temp_over_ebus
  alias: –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä –Ω–∞–≥—Ä—ñ–≤—É —á–µ—Ä–µ–∑ Ebus
  trigger:
    - platform: time_pattern
      minutes: "/3"
    - platform: state
      entity_id: 
        - switch.ebusd_bai_heatingswitch_onoff
        - switch.ebusd_bai_hwcswitch_onoff
        - input_number.main_heater_storage_temp_desired 
  condition:
    - condition: template
      value_template: |
        {{ 
          trigger.platform == 'state' or
          is_state('switch.ebusd_bai_heatingswitch_onoff', 'on') or
          is_state('switch.ebusd_bai_hwcswitch_onoff', 'on')
        }}
  action:
    - service: python_script.heating_ebus_sync
  mode: restart

- id: notify_about_heating
  alias: '–ù–æ—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è –ø—Ä–æ –≤–∫–ª—é—á–µ–Ω–Ω—è –Ω–∞–≥—Ä—ñ–≤—É'
  trigger:
    - platform: state
      entity_id: binary_sensor.ebusd_bai_flame
      for: 00:01:00
  action:
  - service: notify.telegram_serhii
    data:
      message: |
        *–†–µ–∂–∏–º –∫–æ—Ç–ª–∞:* {{ states('sensor.ebusd_bai_state') }}
        ‚ö° *–ü—ñ–¥—ñ–≥—Ä—ñ–≤* {{ states('binary_sensor.ebusd_bai_flame') }}, –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—å {{ states('sensor.main_heater_current_power') }}
        ‚ô® *–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞* {{ states('sensor.ebusd_bai_flowtemp_temp') }} / {{ states('sensor.ebusd_bai_flowtempdesired_temp') }}
        Ô∏èüö∞ *–ì–í–°* {{ states('sensor.ebusd_bai_storagetemp_temp') }} / {{ states('sensor.ebusd_bai_storagetempdesired_temp') }}
  mode: single

- id: heating_abnormal_water_pressure
  alias: "–ù–æ—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è –ø—Ä–æ –Ω–µ –Ω–æ—Ä–º–∞–ª—å–Ω–∏–π —Ç–∏—Å–∫ –≤ –æ–ø–∞–ª–µ–Ω–Ω—ñ"
  trigger:
    - platform: numeric_state
      entity_id: sensor.ebusd_bai_waterpressure_press
      above: 2.5
    - platform: numeric_state
      entity_id: sensor.ebusd_bai_waterpressure_press
      below: 1.2
  action:
    - service: notify.telegram_serhii
      data:
        message: |
          –ö—Ä–∏—Ç–∏—á–Ω–∏–π —Ç–∏—Å–∫ —Ç–µ–ø–ª–æ–Ω–æ—Å—ñ—è: <b>{{ states('sensor.ebusd_bai_waterpressure_press') }}</b>
    - service: persistent_notification.create
      data:
        title: ‚ö† - Warning!
        message: "–ö—Ä–∏—Ç–∏—á–Ω–∏–π —Ç–∏—Å–∫ —Ç–µ–ø–ª–æ–Ω–æ—Å—ñ—è: <b>{{ states('sensor.ebusd_bai_waterpressure_press') }}</b>"
  mode: single

- id: save_last_heating_temperature
  alias: "–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏ –Ω–æ—Å—ñ—è –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –∫–ª–∞–ø–∞–Ω–∞ –ì–í–°"
  trigger:
    - platform: state
      entity_id: sensor.ebusd_bai_positionvalveset
      from: Heating
  action:
    - service: input_number.set_value
      data:
        value: "{{ states('sensor.ebusd_bai_flowtemp_temp') | float }}"
      target:
        entity_id: input_number.heating_last_flowtemp
  mode: restart 

- id: enable_heating
  alias: –ö–µ—Ä—É–≤–∞–Ω–Ω—è –æ–ø–∞–ª–µ–Ω–Ω—è–º –ø–æ —á–∞—Å—É
  trigger:
    - platform: time
      at: '23:30'
      variables:
        heating_state: 'on'
    - platform: time
      at: '07:00'
      variables:
        heating_state: 'off'
    # - platform: time
    #   at: '12:00'
    #   variables: 
    #     heating_state: 'on'
    - platform: time
      at: '15:00'
      variables: 
        heating_state: 'off'
  action:
    - service_template: switch.turn_{{ heating_state }}
      entity_id: switch.ebusd_bai_heatingswitch_onoff
    - if:
      - condition: template
        value_template: "{{ heating_state == 'off' and states('switch.ebusd_bai_hwcswitch_onoff') == 'on' }}"
      then:
      - service: switch.turn_off
        entity_id: switch.ebusd_bai_hwcswitch_onoff

- id: enable_hot_floor_pump
  alias: –í–≤—ñ–º–∫–Ω—É—Ç–∏ –Ω–∞—Å–æ—Å —Ç–µ–ø–ª–æ—ó –ø—ñ–¥–ª–æ–≥–∏ (–¢–ü)
  trigger:
    - id: solar_on
      type: power
      platform: device
      device_id: 26ffd1f44a4fa883a5346115b3592da0
      entity_id: sensor.power_production_now
      domain: sensor
      above: 1000
    - id: heater_on
      platform: state
      entity_id: switch.ebusd_bai_heatingswitch_onoff
      to: "on"
    - platform: numeric_state
      entity_id: sensor.fireplace_fan_power
      above: 1
  action:
    - alias: Enable pump
      service_template: switch.turn_on
      entity_id: switch.hot_floor_pump
  mode: single

- id: disable_hot_floor_pump
  alias: –í–∏–º–∫–Ω—É—Ç–∏ –Ω–∞—Å–æ—Å —Ç–µ–ø–ª–æ—ó –ø—ñ–¥–ª–æ–≥–∏ (–¢–ü)
  trigger:
    - id: solar_off
      type: power
      platform: device
      device_id: 26ffd1f44a4fa883a5346115b3592da0
      entity_id: sensor.power_production_now
      domain: sensor
      below: 999
      variables:
        scheduled_disabling: false
    - id: heater_off
      platform: state
      entity_id: switch.ebusd_bai_heatingswitch_onoff
      to: "off"
      variables:
        scheduled_disabling: true
    - platform: time
      at: input_datetime.disable_hot_floor_pump_at
      variables:
        scheduled_disabling: false
    - platform: numeric_state
      entity_id: sensor.fireplace_fan_power
      below: 1
      variables:
        scheduled_disabling: true
  condition:
    - condition: template
      value_template: "{{ states('switch.ebusd_bai_heatingswitch_onoff') == 'off' }}"
  action:
    - if: 
        - condition: template
          value_template: "{{ scheduled_disabling }}"
      then:
        - alias: Schedule pump disabling
          service: input_datetime.set_datetime
          target:
            entity_id: input_datetime.disable_hot_floor_pump_at
          data:
            timestamp: "{{ now().timestamp() + 2 * 60 * 60 }}"
      else:
      - alias: Disable pump
        service_template: switch.turn_off
        entity_id: switch.hot_floor_pump
  mode: single

- id: control_heating_valves
  alias: –ö–µ—Ä—É–≤–∞–Ω–Ω—è –∫—Ä–∞–Ω–∞–º–∏ –æ–ø–∞–ª–µ–Ω–Ω—è –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏
  mode: parallel
  max: 20
  trigger:
    - platform: state
      entity_id: binary_sensor.heating_valve_open_master_bedroom
      variables:
        valve_switch_entity_id: [switch.heater_valve_master_bedroom]
    - platform: state
      entity_id: binary_sensor.heating_valve_open_master_bathroom
      variables:
        valve_switch_entity_id: [switch.heater_valve_master_bathroom_hot_floor]
    - platform: state
      entity_id: binary_sensor.heating_valve_open_cabinet
      variables:
        valve_switch_entity_id: [switch.heater_valve_cabinet]
    - platform: state
      entity_id: binary_sensor.heating_valve_open_kid_small_bedroom
      variables:
        valve_switch_entity_id: [switch.heater_valve_kid_small_bedroom]
    - platform: state
      entity_id: binary_sensor.heating_valve_open_kid_big_bedroom
      variables:
        valve_switch_entity_id: [switch.heater_valve_kid_big_bedroom]
    - platform: state
      entity_id: binary_sensor.heating_valve_open_kid_bathroom
      variables:
        valve_switch_entity_id: [switch.heater_valve_hall_and_small_bathroom]
    - platform: state
      entity_id: binary_sensor.heating_valve_open_living_room
      variables:
        valve_switch_entity_id: 
          - switch.heater_valve_livingroom
          # - switch.heater_valve_hot_floor_livingroom3
          - switch.heater_valve_hot_floor_livingroom2
          - switch.heater_valve_hot_floor_livingroom1
    - platform: state
      entity_id: binary_sensor.heating_valve_open_kitchen
      variables:
        valve_switch_entity_id: [switch.heater_valve_kitchen_hot_floor]
    - platform: state
      entity_id: binary_sensor.heating_valve_open_entrance_or_tech_room
      variables:
        valve_switch_entity_id: [switch.heater_valve_hot_floor_entrance_tech_room]
  action:
    # normal open valves require power to close the valve
    - service_template: "switch.turn_{{ 'off' if trigger.to_state.state == 'on' else 'on' }}"
      target:
        entity_id: "{{ valve_switch_entity_id | list }}"