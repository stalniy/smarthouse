- id: sync_heating_over_ebus
  alias: –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä –Ω–∞–≥—Ä—ñ–≤—É —á–µ—Ä–µ–∑ Ebus
  trigger:
    - platform: time_pattern
      minutes: "/2"
    - platform: state
      entity_id: 
        - input_boolean.heating_enabled
        - input_boolean.hwc_enabled
        - input_number.main_heater_storage_temp_desired 
  action:
    - service: python_script.heating_ebus_sync
  mode: restart


- id: sync_heating_switch_state_over_ebus
  alias: –ê–≤—Ç–æ—Ç–∏–º–∞—Ç–∏—á–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è —Å—Ç–∞–Ω—É –æ–ø–∞–ª–µ–Ω–Ω—è –ø–æ Ebus (—è–∫—â–æ –∫–æ—Ç–µ–ª –≤–∫–ª—é—á–∏—Ç—å—Å—è –∫–æ–ª–∏ –º–∞—î –±—É—Ç–∏ –≤–∏–º–∫–Ω—É—Ç–∏–π)
  mode: parallel
  trigger:
    - platform: state
      entity_id: switch.ebusd_bai_heatingswitch_onoff
      variables:
        expected_value: "{{ states('input_boolean.heating_enabled') }}"
        entity_id_to_sync: switch.ebusd_bai_heatingswitch_onoff
    - platform: state
      entity_id: switch.ebusd_bai_hwcswitch_onoff
      variables:
        expected_value: "{{ states('input_boolean.hwc_enabled') }}"
        entity_id_to_sync: switch.ebusd_bai_hwcswitch_onoff
    - platform: state
      entity_id: input_boolean.heating_enabled
      variables:
        expected_value: "{{ states('input_boolean.heating_enabled') }}"
        entity_id_to_sync: switch.ebusd_bai_heatingswitch_onoff
    - platform: state
      entity_id: input_boolean.hwc_enabled
      variables:
        expected_value: "{{ states('input_boolean.hwc_enabled') }}"
        entity_id_to_sync: switch.ebusd_bai_hwcswitch_onoff
  condition:  
    - condition: template
      value_template: "{{ states(entity_id_to_sync) != expected_value }}"
  action:
    - service_template: "switch.turn_{{ expected_value }}"
      target: 
        entity_id: "{{ entity_id_to_sync }}"

- id: notify_about_heating
  alias: '–ù–æ—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è –ø—Ä–æ –≤–∫–ª—é—á–µ–Ω–Ω—è –Ω–∞–≥—Ä—ñ–≤—É'
  trigger:
    - platform: state
      entity_id: binary_sensor.ebusd_bai_flame
      for: 00:01:00
  action:
  - service: notify.telegram_serhii
    data:
      message: |
        *–†–µ–∂–∏–º –∫–æ—Ç–ª–∞:* {{ states('sensor.ebusd_bai_state') }}
        ‚ö° *–ü—ñ–¥—ñ–≥—Ä—ñ–≤* {{ states('binary_sensor.ebusd_bai_flame') }}, –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—å {{ states('sensor.main_heater_current_power') }}
        ‚ô® *–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞* {{ states('sensor.ebusd_bai_flowtemp_temp') }} / {{ states('sensor.ebusd_bai_flowtempdesired_temp') }}
        Ô∏èüö∞ *–ì–í–°* {{ states('sensor.ebusd_bai_storagetemp_temp') }} / {{ states('sensor.ebusd_bai_storagetempdesired_temp') }}
  mode: single

- id: heating_abnormal_water_pressure
  alias: "–ù–æ—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è –ø—Ä–æ –Ω–µ –Ω–æ—Ä–º–∞–ª—å–Ω–∏–π —Ç–∏—Å–∫ –≤ –æ–ø–∞–ª–µ–Ω–Ω—ñ"
  trigger:
    - platform: numeric_state
      entity_id: sensor.ebusd_bai_waterpressure_press
      above: 2.5
    - platform: numeric_state
      entity_id: sensor.ebusd_bai_waterpressure_press
      below: 1.2
  action:
    - service: persistent_notification.create
      data:
        title: "‚ö† - Warning!"
        message: |
          –ö—Ä–∏—Ç–∏—á–Ω–∏–π —Ç–∏—Å–∫ —Ç–µ–ø–ª–æ–Ω–æ—Å—ñ—è: <b>{{ states('sensor.ebusd_bai_waterpressure_press') }}</b>
  mode: single

- id: save_last_heating_temperature
  alias: "–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏ –Ω–æ—Å—ñ—è –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –∫–ª–∞–ø–∞–Ω–∞ –ì–í–°"
  trigger:
    - platform: state
      entity_id: sensor.ebusd_bai_positionvalveset
      from: Heating
  action:
    - service: input_number.set_value
      data:
        value: "{{ states('sensor.ebusd_bai_flowtemp_temp') | float }}"
      target:
        entity_id: input_number.heating_last_flowtemp
  mode: restart 

- id: enable_heating
  alias: –ö–µ—Ä—É–≤–∞–Ω–Ω—è –æ–ø–∞–ª–µ–Ω–Ω—è–º –ø–æ —á–∞—Å—É
  trigger:
    - platform: time
      at: '23:05'
      variables:
        heating_state: 'on'
    - platform: time
      at: '07:00'
      variables:
        heating_state: 'off'
    # - platform: time
    #   at: '12:00'
    #   variables: 
    #     heating_state: 'on'
    - platform: time
      at: '15:00'
      variables: 
        heating_state: 'off'
  action:
    - if:
      - condition: "template"
        value_template: "{{ states('input_select.heating_mode') != 'auto' }}"
      then:
        - service: input_select.select_option
          target:
            entity_id: input_select.heating_mode
          data:
            option: auto
    - if:
      - condition: "template"
        value_template: "{{ states('input_select.heating_preset') != 'both' }}"
      then:
        - service: input_select.select_option
          target:
            entity_id: input_select.heating_preset
          data:
            option: both
    - service_template: input_boolean.turn_{{ heating_state }}
      entity_id: input_boolean.heating_enabled
    - if:
      - condition: template
        value_template: "{{ heating_state == 'off' and is_state('input_boolean.hwc_enabled', 'on') }}"
      then:
      - service: input_boolean.turn_off
        entity_id: input_boolean.hwc_enabled

- id: toggle_hot_floor_pump
  alias: –ö–µ—Ä—É–≤–∞–Ω–Ω—è –Ω–∞—Å–æ—Å–æ–º —Ç–µ–ø–ª–æ—ó –ø—ñ–¥–ª–æ–≥–∏ (–¢–ü)
  mode: restart
  trigger:
    - platform: state
      entity_id: binary_sensor.hot_floor_pump_required
      to: 'on'
      variables:
        pump_state: 'on'
    - platform: state
      entity_id: binary_sensor.hot_floor_pump_required
      to: 'off'
      variables:
        delay_turn_off: "{{ now() + timedelta(hours=1) }}"
        pump_state: "{{ states('binary_sensor.is_hot_floor_valves_open') }}"
    - platform: time
      at: input_datetime.disable_hot_floor_pump_at
      variables:
        pump_state: 'off'
  action:
    - alias: Set pump turn off time
      service: input_datetime.set_datetime
      target:
        entity_id: input_datetime.disable_hot_floor_pump_at
      data:
        datetime: "{{ delay_turn_off if delay_turn_off is defined and pump_state == 'on' else as_datetime(0) }}"
    - if: 
        - condition: template
          value_template: "{{ not is_state('switch.hot_floor_pump', pump_state) }}"
      then:
        - alias: Toggle pump
          service_template: "switch.turn_{{ pump_state }}"
          entity_id: switch.hot_floor_pump

- id: control_heating_valves
  alias: –ö–µ—Ä—É–≤–∞–Ω–Ω—è –∫—Ä–∞–Ω–∞–º–∏ –æ–ø–∞–ª–µ–Ω–Ω—è –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏
  mode: queued
  max: 24
  trigger:
    - platform: state
      entity_id: binary_sensor.heating_valve_open_master_bedroom
      variables:
        valve_switch_entity_id: [switch.heater_valve_master_bedroom]
    - platform: state
      entity_id: binary_sensor.heating_valve_open_master_bathroom
      variables:
        valve_switch_entity_id: [switch.heater_valve_master_bathroom_hot_floor]
    - platform: state
      entity_id: binary_sensor.heating_valve_open_cabinet
      variables:
        valve_switch_entity_id: [switch.heater_valve_cabinet]
    - platform: state
      entity_id: binary_sensor.heating_valve_open_kid_small_bedroom
      variables:
        valve_switch_entity_id: [switch.heater_valve_kid_small_bedroom]
    - platform: state
      entity_id: binary_sensor.heating_valve_open_kid_big_bedroom
      variables:
        valve_switch_entity_id: [switch.heater_valve_kid_big_bedroom]
    - platform: state
      entity_id: binary_sensor.heating_valve_open_kid_bathroom
      variables:
        valve_switch_entity_id: [switch.heater_valve_hall_and_small_bathroom]
    - platform: state
      entity_id: binary_sensor.heating_valve_open_living_room
      variables:
        valve_switch_entity_id: [switch.heater_valve_livingroom]
    - platform: state
      entity_id: binary_sensor.heating_valve_open_living_room_hot_floor
      variables:
        valve_switch_entity_id: 
          - switch.heater_valve_hot_floor_livingroom3
          - switch.heater_valve_hot_floor_livingroom2
          - switch.heater_valve_hot_floor_livingroom1
    - platform: state
      entity_id: binary_sensor.heating_valve_open_kitchen
      variables:
        valve_switch_entity_id: [switch.heater_valve_kitchen_hot_floor]
    - platform: state
      entity_id: binary_sensor.heating_valve_open_entrance_room
      variables:
        valve_switch_entity_id: [switch.heater_valve_hot_floor_entrance_tech_room]
  action:
    # normal open valves require power to close the valve
    - service_template: "switch.turn_{{ 'off' if trigger.to_state.state == 'on' else 'on' }}"
      target:
        entity_id: "{{ valve_switch_entity_id | list }}"

# - id: open_valves_on_collector_if_no_heating
#   alias: –í—ñ–∫–¥—Ä–∏—Ç–∏ –∫—Ä–∞–Ω–∏ –Ω–∞ –∫–æ–ª–µ–∫—Ç–æ—Ä—ñ —è–∫—â–æ –≤–∏–º–∫–Ω–µ–Ω–µ –æ–ø–∞–ª–µ–Ω–Ω—è
#   trigger:
#     platform: state
#     entity_id: input_boolean.heating_enabled
#     to: 'off'
#   action:
#     - service: switch.turn_off
#       entity_id: 
#         - switch.heater_valve_master_bedroom
#         - switch.heater_valve_master_bathroom_hot_floor
#         - switch.heater_valve_cabinet
#         - switch.heater_valve_kid_small_bedroom
#         - switch.heater_valve_kid_big_bedroom
#         - switch.heater_valve_hall_and_small_bathroom
#         - switch.heater_valve_livingroom
#         - switch.heater_valve_hot_floor_livingroom3
#         - switch.heater_valve_hot_floor_livingroom2
#         - switch.heater_valve_hot_floor_livingroom1
#         - switch.heater_valve_kitchen_hot_floor
#         - switch.heater_valve_hot_floor_entrance_tech_room

- id: control_hwc
  alias: –ö–µ—Ä—É–≤–∞–Ω–Ω—è –±–æ–π–ª–µ—Ä–æ–º
  trigger:
    - platform: template
      value_template: |
        {{ 
          states('sensor.solcast_pv_forecast_forecast_this_hour') | float(0) >= 1500 and
          5 <= now().hour <= 19
        }}
      variables:
        heater_state: "on"
    - platform: template
      value_template: |
        {{ 
          states('sensor.solcast_pv_forecast_forecast_this_hour') | float(0) < 1500 and
          5 <= now().hour <= 19
        }}
      variables:
        heater_state: "off"
    - platform: time
      at: "03:00:00"
      variables:
        heater_state: "on"
    - platform: time
      at: "05:50:00"
      variables:
        heater_state: "off"
  action:
    - if:
        - condition: template
          value_template: "{{ now().strftime('%a') == 'Sat' and trigger.platform == 'time' }}"
      then:
        - service_template: "input_boolean.turn_{{ heater_state }}"
          target:
            entity_id: input_boolean.hwc_enabled
      else:
        - alias: –í–≤—ñ–º–∫–Ω—É—Ç–∏/–í–∏–º–∫–Ω—É—Ç–∏ –±–æ–π–ª–µ—Ä
          service_template: switch.turn_{{ heater_state }}
          entity_id: switch.water_heater_2k
  mode: restart
