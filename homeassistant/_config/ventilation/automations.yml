- id: manage_bathroom_ventilation
  alias: Керування вентиляцією у ванних кімнатах
  trigger:
    - id: schedule
      platform: state
      entity_id: binary_sensor.requires_bathroom_ventillation
      to: 
        - 'on'
        - 'off'
      variables:
        schedule_fan_state: "{{ 'on' if trigger.to_state.state == 'on' else 'off' }}"
        fan_turn_on_at: |
          {% if schedule_fan_state == 'on' and is_state('switch.bathroom_fan', 'off') %}
            {{ now() + timedelta(minutes=5) }}
          {% else %}
            {{ 0 | as_datetime }}
          {% endif %}
        fan_turn_off_at: |
          {% if schedule_fan_state == 'off' and is_state('switch.bathroom_fan', 'on') %}
            {% set delta = timedelta(hours=1) if is_state('binary_sensor.bathroom_humidity_high', 'on') else timedelta(minutes=5) %}
            {{ now() + delta }}
          {% else %}
            {{ 0 | as_datetime }}
          {% endif %}
    - platform: time
      at: input_datetime.bathroom_fan_turn_on_at
      variables:
        fan_command: turn_on
    - platform: time
      at: input_datetime.bathroom_fan_turn_off_at
      variables:
        fan_command: turn_off
    - platform: state
      entity_id: binary_sensor.bathroom_humidity_high
      to: 'off'
      variables:  
        fan_turn_off_at: "{{ now() + timedelta(minutes=10) if is_state('switch.bathroom_fan', 'on') else as_datetime(0) }}"
  mode: restart
  action:
    - if: 
      - condition: template
        value_template: "{{ fan_turn_on_at is defined }}"
      then:
      - alias: Запланувати час ввімкнення вентилятора
        service: input_datetime.set_datetime
        data:
          entity_id: "input_datetime.bathroom_fan_turn_on_at"
          datetime: "{{ fan_turn_on_at }}"
    - if:
      - condition: template
        value_template: "{{ fan_turn_off_at is defined }}"
      then:
      - alias: Запланувати час вимкнення вентилятора
        service: input_datetime.set_datetime
        data:
          entity_id: "input_datetime.bathroom_fan_turn_off_at"
          datetime: "{{ fan_turn_off_at }}"
    - if:
      - condition: template
        value_template: "{{ fan_command is defined }}"
      then:
      - alias: Ввікнути/Вимкнути вентиляцію
        service_template: "switch.{{ fan_command }}"
        entity_id: switch.bathroom_fan
      - condition: template
        value_template: "{{ fan_command == 'turn_off' }}"
      - alias: Видаляємо запланований контроль вентилятора
        service: input_datetime.set_datetime
        data:
          entity_id: 
            - input_datetime.bathroom_fan_turn_on_at
            - input_datetime.bathroom_fan_turn_off_at
          datetime: "{{ 0 | as_datetime }}"

- alias: Керування вентиляцією в гардеробних
  trigger:
    - platform: state
      entity_id: switch.bathroom_fan
  action:
    - service_template: "fan.turn_{{ 'on' if states('switch.bathroom_fan') == 'on' else 'off' }}"
      entity_id: fan.wardrobes
      alias: Ввікнути/Вимкнути вентиляцію

- alias: Повідомлення про високу вологість в будинку
  trigger:
    - platform: template
      value_template: | 
        {%
          set amount_of_high_humidity_sensors = [
            states('sensor.kid_bathroom_climate_humidity'),
            states('sensor.master_bathroom_climate_humidity'),
            states('sensor.master_wardrobe_climate_humidity'),
            states('sensor.master_bedroom_climate_humidity'),
            states('sensor.living_room_climate_humidity'),
            states('sensor.kitchen_climate_humidity'),
            states('sensor.entrance_room_climate_humidity'),
            states('sensor.cabinet_climate_humidity')
          ] | map('float', 0) | select('gt', 70) | list | count 
        %}
        {{ amount_of_high_humidity_sensors > 0 }}
  action:
    - service: persistent_notification.create
      data:
        notification_id: high_humidity_in_house
        message: |
          Провітріть будинок, зависока вологість:
          {% set sensors = [
            { "value": float(states('sensor.kid_bathroom_climate_humidity'), 0), "name": "Дитяча ванна" },
            { "value": float(states('sensor.master_bathroom_climate_humidity'), 0), "name": "Доросла ванна" },
            { "value": float(states('sensor.master_wardrobe_climate_humidity'), 0), "name": "Гардеробна" },
            { "value": float(states('sensor.master_bedroom_climate_humidity'), 0), "name": "Доросла спальня" },
            { "value": float(states('sensor.living_room_climate_humidity'), 0), "name": "Вітальня" },
            { "value": float(states('sensor.kitchen_climate_humidity'), 0), "name": "Кухня" },
            { "value": float(states('sensor.entrance_room_climate_humidity'), 0), "name": "Прихожа" },
            { "value": float(states('sensor.cabinet_climate_humidity'), 0), "name": "Кабінет" }
          ]%}
          {{ sensors | selectattr('value', 'gt', 70) | map(attribute="name") | join(',\n') }}

- id: turn_off_ventilation_when_sleeping
  alias: Turn off ventilation when go to sleep
  trigger:
    - platform: event
      event_type: sleeping_time_start
  action:
    - service: switch.turn_off
      target:
        entity_id: "switch.bathroom_fan"