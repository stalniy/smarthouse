automation:
  - id: turn_off_light_in_entrance_room
    mode: restart
    trigger:
      - platform: state
        entity_id: binary_sensor.entrance_room_motion_occupancy
        to: 'off'
        variables:
          new_state: false
      - platform: state
        entity_id: binary_sensor.entrance_room_motion_occupancy
        to: 'on'
        variables:
          new_state: "{{ is_state('switch.entrance_room_light', 'on') or float(states('sensor.entrance_room_motion_illuminance_lux'), 0) <= 5 }}"
      - platform: numeric_state
        entity_id: sensor.entrance_room_motion_illuminance_lux
        below: 5
        variables:
          new_state: "{{ is_state('binary_sensor.entrance_room_motion_occupancy', 'on') }}"
    variables:
      needs_light: |
        {{ new_state and is_state('binary_sensor.is_sleeping', 'off') }}
    action:
      - service_template: "switch.turn_{{ 'on' if needs_light else 'off' }}"
        target:
          entity_id: switch.entrance_room_light

  - id: toggle_kitchen_light
    alias: Kitchen light control
    mode: restart
    trigger:  
      # - platform: mqtt
      #   topic: zb2mqtt/kitchen_main_light_toggler
      #   variables: 
      #     process_trigger: "{{ trigger.payload_json['vibration'] == true and is_state('group.residents', 'home') }}"
      #     new_state: "on"
      - platform: state
        # entity_id: binary_sensor.kitchen_motion
        entity_id: binary_sensor.kitchen_presence
        to: 'on'
        variables:
          new_state: |
            {{ 
              is_state('switch.kitchen_additional_light', 'on') or
              is_state('light.kitchen_light', 'on') or
              float(states('sensor.kitchen_presence_sensor_light_level'), 0) <= 10
            }}
      - platform: state
        entity_id: binary_sensor.kitchen_presence
        to: 'off'
        for: "{{ '00:01:00' if is_state('binary_sensor.is_sleeping', 'off') else '00:00:00' }}"
        variables:
          new_state: false
      - platform: numeric_state
        entity_id: sensor.kitchen_presence_sensor_light_level
        below: 10
        variables:
          new_state: "{{ is_state('binary_sensor.kitchen_presence', 'on') }}"
    variables: 
      device_state: "{{ 'on' if new_state else 'off' }}"
    action:
      - if:
        - condition: state
          entity_id: binary_sensor.is_sleeping
          state: "off"
        then: 
        - service_template: "light.turn_{{ device_state }}"
          target:
            entity_id: light.kitchen_light
        else:
        - service_template: "switch.turn_{{ device_state }}"
          target:
            entity_id: switch.kitchen_additional_light

  - id: toggle_kitchen_bar_light
    alias: Kitchen bar light control
    mode: restart
    trigger:  
      - platform: state
        entity_id: binary_sensor.kitchen_bar_presence
        to: 'on'
        for: '00:00:05'
      - platform: state
        entity_id: binary_sensor.kitchen_bar_presence
        to: 'off'
        for: "{{ '00:30:00' if is_state('binary_sensor.is_sleeping', 'off') else '00:00:00' }}"
      # - platform: mqtt
      #   topic: zb2mqtt/kitchen_bar_light_toggler
      #   variables: 
      #     process_trigger: "{{ trigger.payload_json['vibration'] == true and is_state('group.residents', 'home') }}"
      #     new_state: "on"
    variables: 
      new_state: | 
        {% set is_on = trigger.to_state.state == 'on' and float(states('sensor.kitchen_presence_sensor_light_level'), 0) <= 10 %}
        {{ 'on' if is_on else 'off'  }}
    action:
      - if:
        - condition: template
          value_template: "{{ new_state == 'off' }}"
        then:
        - delay: "00:00:10"
      - service_template: "light.turn_{{ new_state }}"
        target:
          entity_id: light.kitchen_bar

  - id: set_brightness_level
    alias: Set brightness level
    trigger:
      - platform: state
        entity_id: binary_sensor.is_sleeping
    variables:
      brightness_level: |
        {{ 2 if is_state('binary_sensor.is_sleeping', 'on') else 100 }}
    action:
      - service: light.turn_on
        data:
          brightness: |
            {{ int(state_attr('light.kid_bathroom', 'min_brightness')) + 
              (brightness_level * (
                int(state_attr('light.kid_bathroom', 'max_brightness')) - int(state_attr('light.kid_bathroom', 'min_brightness'))
              ) / 100) | round
            }}
        target:
          entity_id: light.kid_bathroom
      - delay: '00:00:01'
      - service: light.turn_off
        target:
          entity_id: light.kid_bathroom

  - id: show_red_map_on_air_attack
    trigger:
      - platform: state
        entity_id: binary_sensor.m_irpin_ta_irpinska_teritorialna_gromada_air
      - platform: state
        entity_id: group.residents
    variables:
      is_turned_on: |
        {{ is_state('binary_sensor.m_irpin_ta_irpinska_teritorialna_gromada_air', 'on') and
          is_state('group.residents', 'home')
        }}
      map_boolean_state: "'on' if is_turned_on else 'off'"
    action:
      - service: light.turn_on
        target:
          entity_id: light.cabinet_map_light
        data:
          rgb_color: "{{ [255, 0, 24] if is_turned_on else [2, 250, 240] }}"
          brightness_pct: 90
      - if: 
        - condition: template
          value_template: "{{ not is_turned_on }}"
        then:
          - service: light.turn_off
            target:
              entity_id: light.cabinet_map_light

