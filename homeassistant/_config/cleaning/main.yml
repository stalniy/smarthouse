input_boolean:
  skip_child_zone: 
    name: Не прибирати дитячу зону у вітальні

input_datetime:
  last_cleaned_at:
    name: Дата останнього прибрання
    has_date: true
    has_time: false

template: 
  - sensor:
    - name: rooms_to_clean_today
      state: >-
        {% set rooms_to_clean = [
          "hall",
          "livingroom_table",
          "kitchen"
        ] %} 
        {% set week_day = now().isoweekday() %}
        
        {% if week_day % 2 == 0 or week_day in [6, 7] %} 
          {% set rooms_to_clean = rooms_to_clean + [
            "kid_bedroom_small",
            "kid_bedroom_big",
            "livingroom_entertainment"
          ]%}
        {% endif %}

        {% if week_day % 2 != 0 or week_day in [6, 7] %}
          {% set rooms_to_clean = rooms_to_clean + [
            "master_bedroom",
            "master_wardrobe",
            "cabinet"
          ]%}
        {% endif %}

        {{ rooms_to_clean | to_json }}

script:
  vacuum_clean:
    alias: Vacuum clean rooms
    mode: queued
    icon: mdi:robot-vacuum
    description: |
      Cleans specified rooms by their names
    fields:
      rooms:
        name: Rooms to clean
        required: true
        selector:
          select:
            multiple: true
            options:
            - hall
            - kid_bedroom_small
            - livingroom_entertainment
            - kitchen
            - kid_bathroom
            - master_bathroom
            - master_bedroom
            - kid_bedroom_big
            - livingroom_table
            - entrance_room
            - tech_room
            - cabinet
            - master_wardrobe
      repeats:
        name: Repeat cleaning
        default: 1
        selector:
          number:
            min: 1
            max: 10
      fan_speed:
        name: Fan speed
        default: custom
        selector:
          select:
            options:
              - 'off'
              - quiet
              - balanced
              - turbo
              - max
              - custom
      mop_mode:
        name: Mop mode
        default: custom
        selector: 
          select: 
            options:
              - standard
              - deep
              - deep_plus
              - custom
      mop_intensity:
        name: Mop intencity
        default: custom
        selector:
          select: 
            options:
              - 'off'
              - mild
              - moderate
              - intense
              - custom
    variables:
      rooms_ids: |
        {% 
          set all_rooms = [
            { "id": 16, "label": "hall" },
            { "id": 17, "label": "kid_bedroom_small" },
            { "id": 18, "label": "livingroom_entertainment" },
            { "id": 19, "label": "kitchen" },
            { "id": 20, "label": "kid_bathroom" },
            { "id": 21, "label": "master_bathroom" },
            { "id": 22, "label": "master_bedroom" },
            { "id": 23, "label": "kid_bedroom_big" },
            { "id": 24, "label": "livingroom_table" },
            { "id": 25, "label": "entrance_room" },
            { "id": 26, "label": "tech_room" },
            { "id": 27, "label": "cabinet" },
            { "id": 28, "label": "master_wardrobe" }
          ]
        %} 
        {% set rooms_to_clean = rooms %}

        {% if is_state('input_boolean.skip_child_zone', 'on') and 'living_room_entertainment' in rooms %}
          {% set rooms_to_clean = rooms_to_clean | reject('eq', 'living_room_entertainment') | list %}
        {% endif %}
        
        {{ all_rooms 
          | selectattr('label', 'in', rooms_to_clean)
          | map(attribute="id")
          | list 
        }}
      start_on_vacuum_state:
        - 'docked'
        - 'returning'
      current_fan_speed: "{{ fan_speed if fan_speed is defined else 'custom' }}"
      current_mop_mode: "{{ mop_mode if mop_mode is defined else 'custom' }}"
      current_mop_intensity: "{{ mop_intensity if mop_intensity is defined else 'custom' }}"
    sequence:
      - alias: Очікуємо поки робот завершить прибирання
        wait_template: |
          {{ states('vacuum.bruce') in start_on_vacuum_state }}
        timeout: "05:00:00"
      - if: 
          - condition: template
            value_template: "{{ wait.completed }}"
        then:
          - if: 
            - condition: template
              value_template: "{{ rooms_ids | count != 0 }}"
            then: 
            - service: vacuum.set_fan_speed
              target:
                entity_id: vacuum.bruce
              data:
                fan_speed: "{{ current_fan_speed }}"
            - service: select.select_option
              target:
                entity_id: select.roborock_s7_mop_mode
              data: 
                option: "{{ current_mop_mode }}"
            - service: select.select_option
              target:
                entity_id: select.roborock_s7_mop_intensity
              data: 
                option: "{{ current_mop_intensity }}"
            - service: vacuum.send_command
              data:
                command: app_segment_clean
                params: 
                  - segments: "{{ rooms_ids }}"
                    repeat: "{{ repeats if repeats is defined else 1 }}"
              target:
                entity_id: vacuum.bruce
            - delay: "00:00:31" # wait for new state being polled
            - alias: Очікуємо поки робот почне прибирання
              wait_template: "{{ is_state('vacuum.bruce', 'cleaning') }}"
              timeout: "00:05:00"
            - event: important_home_event
              event_data:
                message: |
                  Брюс почав прибирання (fan={{ current_fan_speed }}, mop={{ current_mop_intensity }}/{{ current_mop_mode }}):
                  {{ rooms | join("\n") }}
            else:
              - event: important_home_event
                event_data:
                  message: |
                    Не виявлено кімнат для прибирання, ігнорую. Кімнати для прибирання:
                    {{ rooms | join("\n") }}
          - if: 
              - condition: template
                value_template: |
                  {{ 
                    is_state('input_boolean.skip_child_zone', 'on') and 
                    'living_room_entertainment' in rooms 
                  }}
            then:
              - service: script.vacuum_clean_zone
                data:
                  zones: [livingroom_entertainment]
                  fan_speed: "{{ current_fan_speed }}"
                  mop_intensity: "{{ current_mop_intensity }}"
                  mop_mode: "{{ current_mop_mode }}"
        else:
          - event: important_home_event
            event_data:
              message: |
                Заплановане прибирання проігнороване, бо стан Брюса не змінився на {{ start_on_vacuum_state }}:
                {{ rooms | join("\n") }}
                
                Почати прибирання: /clean_house

  vacuum_clean_zone:
    alias: Vacuum clean zones
    icon: mdi:robot-vacuum
    mode: queued
    fields:
      zones:
        name: Zone names to clean
        required: true
        selector:
          select:
            multiple: true
            options:
              - terrace_exit
              - fireplace
              - livingroom_entertainment
      fan_speed:
        name: Fan speed
        default: balanced
        selector:
          select:
            options:
              - 'off'
              - quiet
              - balanced
              - turbo
              - max
              - custom
      mop_mode:
        name: Mop mode
        default: custom
        selector: 
          select: 
            options:
              - standard
              - deep
              - deep_plus
              - custom
      mop_intensity:
        name: Mop intencity
        default: custom
        selector:
          select: 
            options:
              - 'off'
              - mild
              - moderate
              - intense
              - custom
    variables:  
      zones_coords: |
        {% 
          set coords = [
            { "label": "livingroom_entertainment", "value": [24329,25379,27971,28607,1] },
            { "label": "terrace_exit", "value": [24343,25536,25500,28564,2] },
            { "label": "fireplace", "value": [27114,26750,30029,28021,2] }
          ]
        %}
        {{ coords 
          | selectattr('label', 'in', zones)
          | map(attribute="value")
          | list  
        }}
      start_on_vacuum_state:
        - 'docked'
        - 'returning'
      current_fan_speed: "{{ fan_speed if fan_speed is defined else 'custom' }}"
      current_mop_mode: "{{ mop_mode if mop_mode is defined else 'custom' }}"
      current_mop_intensity: "{{ mop_intensity if mop_intensity is defined else 'custom' }}"
    sequence: 
      - alias: Очікуємо поки робот завершить прибирання
        wait_template: |
          {{ states('vacuum.bruce') in start_on_vacuum_state }}
        timeout: "05:00:00"
      - service: vacuum.set_fan_speed
        target:
          entity_id: vacuum.bruce
        data:
          fan_speed: "{{ current_fan_speed }}"
      - service: select.select_option
        target:
          entity_id: select.roborock_s7_mop_mode
        data: 
          option: "{{ current_mop_mode }}"
      - service: select.select_option
        target:
          entity_id: select.roborock_s7_mop_intensity
        data: 
          option: "{{ current_mop_intensity }}"
      - service: vacuum.send_command
        data:
          command: app_zoned_clean
          params: "{{ zones_coords }}"
        target:
          entity_id: vacuum.bruce
      - delay: "00:00:31" # wait for new state being polled
      - alias: Очікуємо поки робот почне прибирання
        wait_template: "{{ is_state('vacuum.bruce', 'cleaning') }}"
        timeout: "00:05:00"
      - event: important_home_event
        event_data:
          message: |
            Брюс почав прибирання зон:
            {{ zones | join("\n") }}
      
automation: !include ./automations.yml